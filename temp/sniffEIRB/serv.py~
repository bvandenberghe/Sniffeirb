#!/usr/bin/python

import SimpleHTTPServer
import SocketServer
import sys
from scapy.all import *
from string import Template
import sys

PORT = 8080

if len(sys.argv)!=2:
    print 'serveur ouvert sur le port par defaut : ',PORT
else:
    PORT = int(sys.argv[1])
    print 'serveur ouvert sur le port ',PORT

def get_page_template(page_name):
    fichier = open(page_name,'r')
    contenu = fichier.read()
    temp = Template(contenu)
    return temp

def move():
    """ sample function to be called via a URL"""
    pkts = sniff(count=10,prn=lambda x:x.sprintf("{IP:%IP.src% -> %IP.dst%\n}{Raw:%Raw.load%\n}"))
    
    return pkts

class CustomHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type','text/html')
        self.end_headers()
        
        if self.path=='/move':
            self.wfile.write(move())
            
        elif self.path=='/test':
            tmp=get_page_template('test.html')
            d = dict(plop='blabla')
            self.wfile.write(tmp.safe_substitute(d))
            
        else:
            SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self)

httpd = SocketServer.ThreadingTCPServer(('localhost', PORT),CustomHandler)


print "serving at port", PORT

httpd.serve_forever()
